#############################
Deploying to Your Own Cluster
#############################

So you have your own hardware, it's all setup and you want to take
advantage of the OKD orchestrator to simplify the installation of
the OKD container platform. Here you just need to provide the
details of your cluster in a short `YAML`_ section of the deployment file.

.. _yaml: https://yaml.org

Prerequisites
=============

Before you can use the orchestrator on your own cluster the cluster instances
must satisfy the **system and environment requirements** defined in the
official OKD documentation. For v3.11 this can be found `here`_.

Additionally, in case it's not obvious...

-   Your cluster must have access to the *outside world* so that additional
    packages can be downloaded
-   You need to have installed ``git`` so that this repository can be
    cloned to the designated *control machine* in your cluster.

.. _here: https://docs.okd.io/3.11/install/prerequisites.html

Populating my_machines
======================

In order to deploy OKD to you cluster the orchestrator has to know about
the machines that will be involved. This is achieved by adding a
``my_machines`` section to your deployment configuration.

The values you provide are used to populate the rendered OKD inventory file,
an automatic step when using Terraform. You essentially provide the values
that terraform would provide if *it* were to create the machines.

Instructions for how to do this can be found in the reference configuration
``deployments/compact-aws-frankfurt-3-11.yaml``. Look for the annotated
``my_machines`` section in the file.

Setup your setenv.sh
====================

You will need the private key-pair required to ssh to your machine instances
and create and have installed a ``setenv.sh`` suitable
for your environment. This is likely to include values for::

    TF_VAR_keypair_name
    TF_VAR_master_certbot_email
    TF_VAR_okd_admin_password
    TF_VAR_okd_developer_password


And then install the variables::

    $ source provider-env/setenv.sh

Running create.py
=================

You need to have cloned this repository onto your *control machine*
(essentially the Bastion or one of your Masters) and have followed the
basic setup instructions detailed in the :doc:`getting-started` section::

    $ git clone https://github.com/InformaticsMatters/okd-orchestrator.git

Run ``create.py`` from the root of the cloned project using the
using a deployment with a correctly populated ``my_machines`` section.
This will generate an OKD Ansible inventory file suitable for your cluster
avoiding the Terraform stage of the deployment::

    $ cd okd-orchestrator
    $ ./create.py --cluster my-deployment

Now use the ``--okd`` option to install the OKD container runtime::

    $ ./create.py --okd
