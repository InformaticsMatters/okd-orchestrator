---

# This playbook should run an a CLI node
# (typically the cluster bastion or master).
# It executes post-OKD installation actions such as: -
#
# - Setting the admin user (an expected user) to allow cluster administration
# - Granting the `anyuid` security context constraint to a number of users,
#   groups and service accounts

- hosts:
  - cli-node

  tasks:

  - name: Login as system:admin
    shell: oc login -u system:admin
    changed_when: False

  - name: Check Admin user
    shell: oc get users
    register: user_result
    changed_when: False

  - name: Create Admin user
    shell: htpasswd -bc /etc/origin/master/htpasswd admin {{ admin_password }}
    vars:
      admin_password: "{{ lookup('env', 'TF_VAR_okd_admin_password') }}"
    become: yes
    when: not user_result.stdout | regex_search('^admin\s', multiline=True)

  - name: Get Cluster Role Bindings
    shell: oc get clusterrolebindings
    register: crb_result
    changed_when: False

  - name: Add cluster-admin rights
    shell: oc adm policy add-cluster-role-to-user cluster-admin {{ item }}
    when: not crb_result.stdout | regex_search('^cluster-admin\s+\S+\s+%s\s' % item, multiline=True)
    loop:
    - admin

  - name: Check Security Context Constraints
    shell: oc describe scc anyuid
    register: scc_result
    changed_when: False

  - name: Grant anyuid Group Security Context Constraint to groups
    shell: oc adm policy add-scc-to-group anyuid {{ item }}
    when: not scc_result.stdout | regex_search('^\s+Groups:\s+\S*%s' % item, multiline=True)
    loop:
    - system:authenticated

  - name: Grant anyuid Security Context Constraints to service accounts
    shell: oc adm policy add-scc-to-user anyuid -z {{ item }}
    when: not scc_result.stdout | regex_search('^\s+Users:\s+\S*%s' % item, multiline=True)
    loop:
    - system:serviceaccount:openrisknet-infra:openrisknet
