# -----------------------------------------------------------------------------
# Templating
# -----------------------------------------------------------------------------

# -------------------------
# The AWS Ansible Inventory
# -------------------------

data "template_file" "inventory" {
  template = "${file("${var.openshift_dir}/inventories/${var.inventory_dir}/inventory.tpl")}"

  vars {

    {% if cluster.public_hostname %}
    public_hostname = "{{ cluster.public_hostname }}"
    {% else %}
    public_hostname = "${aws_eip.master.public_ip}"
    {% endif %}
    {% if cluster.router_basename %}
    router_basename = "{{ cluster.router_basename }}"
    {% else %}
    router_basename = "${aws_eip.infra.public_ip}"
    {% endif %}

    master1 = "${aws_eip.master.public_ip}"
    master1_hostname = "${aws_instance.master.0.private_dns}"

    {% for item in range(1, cluster.master.count) %}
    master{{ item + 1 }} = "${aws_instance.master.{{ item }}.private_ip}"
    master{{ item + 1 }}_hostname = "${aws_instance.master.{{ item }}.private_dns}"
    {% endfor %}

    infra1 = "${aws_eip.infra.public_ip}"
    infra1_hostname = "${aws_instance.infra.0.private_dns}"

    {% for item in range(1, cluster.infra.count) %}
    infra{{ item + 1 }} = "${aws_instance.infra.{{ item }}.private_ip}"
    infra{{ item + 1 }}_hostname = "${aws_instance.infra.{{ item }}.private_dns}"
    {% endfor %}

    {% for item in range(cluster.node.count) %}
    node{{ '%03d'|format(item + 1) }} = "${aws_instance.node.{{ item }}.private_ip}"
    node{{ '%03d'|format(item + 1) }}_hostname = "${aws_instance.node.{{ item }}.private_dns}"
    {% endfor %}

  }
}

resource "local_file" "inventory" {
  content = "${data.template_file.inventory.rendered}"
  filename = "${var.openshift_dir}/inventories/${var.inventory_dir}/inventory"
}

# ---------------------
# The Ansible Inventory (post-os Ansible plays)
# ---------------------

data "template_file" "post_os_inventory" {
  template = "${file("${var.ansible_dir}/post-os/inventory.tpl")}"

  vars {
    cli-node-ip = "${aws_instance.master.0.private_dns}"
    admin-password = "${var.okd_admin_password}"
    ansible-user = "centos"
  }
}

resource "local_file" "post_os_inventory" {
  content = "${data.template_file.post_os_inventory.rendered}"
  filename = "${var.ansible_dir}/post-os/inventory"
}

# -------------------------
# The AWS Bastion Inventory
# -------------------------

data "template_file" "bastion-inventory" {
  template = "${file("${var.openshift_dir}/inventories/${var.inventory_dir}/bastion.inventory.tpl")}"

  vars {
    bastion = "${aws_instance.bastion.0.public_ip}"
  }
}

resource "local_file" "bastion-inventory" {
  content = "${data.template_file.bastion-inventory.rendered}"
  filename = "${var.openshift_dir}/inventories/${var.inventory_dir}/bastion.inventory"
}

# -------------------------------------
# The AWS Bastion Environment Variables
# -------------------------------------

data "template_file" "sh" {
  template = "${file("${var.openshift_dir}/inventories/${var.inventory_dir}/bastion.sh.tpl")}"

  vars {
    aws_access_key = "${var.aws_access_key}"
    aws_secret_key = "${var.aws_secret_key}"
    okd_admin_password = "${var.okd_admin_password}"
  }
}

resource "local_file" "bastion-sh" {
  content = "${data.template_file.sh.rendered}"
  filename = "${var.openshift_dir}/inventories/${var.inventory_dir}/bastion.sh"
}
